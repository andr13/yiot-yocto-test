/****************************************************************************
** Meta object code from reading C++ file 'kwallet_interface.h'
**
** Created by: The Qt Meta Object Compiler version 67 (Qt 5.15.1)
**
** WARNING! All changes made in this file will be lost!
*****************************************************************************/

#include <memory>
#include "kwallet_interface.h"
#include <QtCore/qbytearray.h>
#include <QtCore/qmetatype.h>
#if !defined(Q_MOC_OUTPUT_REVISION)
#error "The header file 'kwallet_interface.h' doesn't include <QObject>."
#elif Q_MOC_OUTPUT_REVISION != 67
#error "This file was generated using the moc from 5.15.1. It"
#error "cannot be used with the include files from this version of Qt."
#error "(The moc has changed too much.)"
#endif

QT_BEGIN_MOC_NAMESPACE
QT_WARNING_PUSH
QT_WARNING_DISABLE_DEPRECATED
struct qt_meta_stringdata_OrgKdeKWalletInterface_t {
    QByteArrayData data[76];
    char stringdata0[950];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(qt_meta_stringdata_OrgKdeKWalletInterface_t, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )
static const qt_meta_stringdata_OrgKdeKWalletInterface_t qt_meta_stringdata_OrgKdeKWalletInterface = {
    {
QT_MOC_LITERAL(0, 0, 22), // "OrgKdeKWalletInterface"
QT_MOC_LITERAL(1, 23, 16), // "allWalletsClosed"
QT_MOC_LITERAL(2, 40, 0), // ""
QT_MOC_LITERAL(3, 41, 23), // "applicationDisconnected"
QT_MOC_LITERAL(4, 65, 6), // "wallet"
QT_MOC_LITERAL(5, 72, 11), // "application"
QT_MOC_LITERAL(6, 84, 17), // "folderListUpdated"
QT_MOC_LITERAL(7, 102, 13), // "folderUpdated"
QT_MOC_LITERAL(8, 116, 3), // "in0"
QT_MOC_LITERAL(9, 120, 3), // "in1"
QT_MOC_LITERAL(10, 124, 17), // "walletAsyncOpened"
QT_MOC_LITERAL(11, 142, 3), // "tId"
QT_MOC_LITERAL(12, 146, 6), // "handle"
QT_MOC_LITERAL(13, 153, 12), // "walletClosed"
QT_MOC_LITERAL(14, 166, 13), // "walletCreated"
QT_MOC_LITERAL(15, 180, 13), // "walletDeleted"
QT_MOC_LITERAL(16, 194, 15), // "walletListDirty"
QT_MOC_LITERAL(17, 210, 12), // "walletOpened"
QT_MOC_LITERAL(18, 223, 14), // "changePassword"
QT_MOC_LITERAL(19, 238, 19), // "QDBusPendingReply<>"
QT_MOC_LITERAL(20, 258, 3), // "wId"
QT_MOC_LITERAL(21, 262, 5), // "appid"
QT_MOC_LITERAL(22, 268, 5), // "close"
QT_MOC_LITERAL(23, 274, 22), // "QDBusPendingReply<int>"
QT_MOC_LITERAL(24, 297, 5), // "force"
QT_MOC_LITERAL(25, 303, 15), // "closeAllWallets"
QT_MOC_LITERAL(26, 319, 12), // "createFolder"
QT_MOC_LITERAL(27, 332, 23), // "QDBusPendingReply<bool>"
QT_MOC_LITERAL(28, 356, 6), // "folder"
QT_MOC_LITERAL(29, 363, 12), // "deleteWallet"
QT_MOC_LITERAL(30, 376, 21), // "disconnectApplication"
QT_MOC_LITERAL(31, 398, 9), // "entryList"
QT_MOC_LITERAL(32, 408, 30), // "QDBusPendingReply<QStringList>"
QT_MOC_LITERAL(33, 439, 9), // "entryType"
QT_MOC_LITERAL(34, 449, 3), // "key"
QT_MOC_LITERAL(35, 453, 18), // "folderDoesNotExist"
QT_MOC_LITERAL(36, 472, 10), // "folderList"
QT_MOC_LITERAL(37, 483, 8), // "hasEntry"
QT_MOC_LITERAL(38, 492, 9), // "hasFolder"
QT_MOC_LITERAL(39, 502, 9), // "isEnabled"
QT_MOC_LITERAL(40, 512, 6), // "isOpen"
QT_MOC_LITERAL(41, 519, 15), // "keyDoesNotExist"
QT_MOC_LITERAL(42, 535, 11), // "localWallet"
QT_MOC_LITERAL(43, 547, 26), // "QDBusPendingReply<QString>"
QT_MOC_LITERAL(44, 574, 13), // "networkWallet"
QT_MOC_LITERAL(45, 588, 4), // "open"
QT_MOC_LITERAL(46, 593, 9), // "openAsync"
QT_MOC_LITERAL(47, 603, 13), // "handleSession"
QT_MOC_LITERAL(48, 617, 8), // "openPath"
QT_MOC_LITERAL(49, 626, 4), // "path"
QT_MOC_LITERAL(50, 631, 13), // "openPathAsync"
QT_MOC_LITERAL(51, 645, 7), // "pamOpen"
QT_MOC_LITERAL(52, 653, 9), // "Q_NOREPLY"
QT_MOC_LITERAL(53, 663, 12), // "passwordHash"
QT_MOC_LITERAL(54, 676, 14), // "sessionTimeout"
QT_MOC_LITERAL(55, 691, 9), // "readEntry"
QT_MOC_LITERAL(56, 701, 29), // "QDBusPendingReply<QByteArray>"
QT_MOC_LITERAL(57, 731, 13), // "readEntryList"
QT_MOC_LITERAL(58, 745, 30), // "QDBusPendingReply<QVariantMap>"
QT_MOC_LITERAL(59, 776, 7), // "readMap"
QT_MOC_LITERAL(60, 784, 11), // "readMapList"
QT_MOC_LITERAL(61, 796, 12), // "readPassword"
QT_MOC_LITERAL(62, 809, 16), // "readPasswordList"
QT_MOC_LITERAL(63, 826, 11), // "reconfigure"
QT_MOC_LITERAL(64, 838, 11), // "removeEntry"
QT_MOC_LITERAL(65, 850, 12), // "removeFolder"
QT_MOC_LITERAL(66, 863, 11), // "renameEntry"
QT_MOC_LITERAL(67, 875, 7), // "oldName"
QT_MOC_LITERAL(68, 883, 7), // "newName"
QT_MOC_LITERAL(69, 891, 4), // "sync"
QT_MOC_LITERAL(70, 896, 5), // "users"
QT_MOC_LITERAL(71, 902, 7), // "wallets"
QT_MOC_LITERAL(72, 910, 10), // "writeEntry"
QT_MOC_LITERAL(73, 921, 5), // "value"
QT_MOC_LITERAL(74, 927, 8), // "writeMap"
QT_MOC_LITERAL(75, 936, 13) // "writePassword"

    },
    "OrgKdeKWalletInterface\0allWalletsClosed\0"
    "\0applicationDisconnected\0wallet\0"
    "application\0folderListUpdated\0"
    "folderUpdated\0in0\0in1\0walletAsyncOpened\0"
    "tId\0handle\0walletClosed\0walletCreated\0"
    "walletDeleted\0walletListDirty\0"
    "walletOpened\0changePassword\0"
    "QDBusPendingReply<>\0wId\0appid\0close\0"
    "QDBusPendingReply<int>\0force\0"
    "closeAllWallets\0createFolder\0"
    "QDBusPendingReply<bool>\0folder\0"
    "deleteWallet\0disconnectApplication\0"
    "entryList\0QDBusPendingReply<QStringList>\0"
    "entryType\0key\0folderDoesNotExist\0"
    "folderList\0hasEntry\0hasFolder\0isEnabled\0"
    "isOpen\0keyDoesNotExist\0localWallet\0"
    "QDBusPendingReply<QString>\0networkWallet\0"
    "open\0openAsync\0handleSession\0openPath\0"
    "path\0openPathAsync\0pamOpen\0Q_NOREPLY\0"
    "passwordHash\0sessionTimeout\0readEntry\0"
    "QDBusPendingReply<QByteArray>\0"
    "readEntryList\0QDBusPendingReply<QVariantMap>\0"
    "readMap\0readMapList\0readPassword\0"
    "readPasswordList\0reconfigure\0removeEntry\0"
    "removeFolder\0renameEntry\0oldName\0"
    "newName\0sync\0users\0wallets\0writeEntry\0"
    "value\0writeMap\0writePassword"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_OrgKdeKWalletInterface[] = {

 // content:
       8,       // revision
       0,       // classname
       0,    0, // classinfo
      52,   14, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
      11,       // signalCount

 // signals: name, argc, parameters, tag, flags
       1,    0,  274,    2, 0x06 /* Public */,
       3,    2,  275,    2, 0x06 /* Public */,
       6,    1,  280,    2, 0x06 /* Public */,
       7,    2,  283,    2, 0x06 /* Public */,
      10,    2,  288,    2, 0x06 /* Public */,
      13,    1,  293,    2, 0x06 /* Public */,
      13,    1,  296,    2, 0x06 /* Public */,
      14,    1,  299,    2, 0x06 /* Public */,
      15,    1,  302,    2, 0x06 /* Public */,
      16,    0,  305,    2, 0x06 /* Public */,
      17,    1,  306,    2, 0x06 /* Public */,

 // slots: name, argc, parameters, tag, flags
      18,    3,  309,    2, 0x0a /* Public */,
      22,    3,  316,    2, 0x0a /* Public */,
      22,    2,  323,    2, 0x0a /* Public */,
      25,    0,  328,    2, 0x0a /* Public */,
      26,    3,  329,    2, 0x0a /* Public */,
      29,    1,  336,    2, 0x0a /* Public */,
      30,    2,  339,    2, 0x0a /* Public */,
      31,    3,  344,    2, 0x0a /* Public */,
      33,    4,  351,    2, 0x0a /* Public */,
      35,    2,  360,    2, 0x0a /* Public */,
      36,    2,  365,    2, 0x0a /* Public */,
      37,    4,  370,    2, 0x0a /* Public */,
      38,    3,  379,    2, 0x0a /* Public */,
      39,    0,  386,    2, 0x0a /* Public */,
      40,    1,  387,    2, 0x0a /* Public */,
      40,    1,  390,    2, 0x0a /* Public */,
      41,    3,  393,    2, 0x0a /* Public */,
      42,    0,  400,    2, 0x0a /* Public */,
      44,    0,  401,    2, 0x0a /* Public */,
      45,    3,  402,    2, 0x0a /* Public */,
      46,    4,  409,    2, 0x0a /* Public */,
      48,    3,  418,    2, 0x0a /* Public */,
      50,    4,  425,    2, 0x0a /* Public */,
      51,    3,  434,   52, 0x0a /* Public */,
      55,    4,  441,    2, 0x0a /* Public */,
      57,    4,  450,    2, 0x0a /* Public */,
      59,    4,  459,    2, 0x0a /* Public */,
      60,    4,  468,    2, 0x0a /* Public */,
      61,    4,  477,    2, 0x0a /* Public */,
      62,    4,  486,    2, 0x0a /* Public */,
      63,    0,  495,    2, 0x0a /* Public */,
      64,    4,  496,    2, 0x0a /* Public */,
      65,    3,  505,    2, 0x0a /* Public */,
      66,    5,  512,    2, 0x0a /* Public */,
      69,    2,  523,   52, 0x0a /* Public */,
      70,    1,  528,    2, 0x0a /* Public */,
      71,    0,  531,    2, 0x0a /* Public */,
      72,    5,  532,    2, 0x0a /* Public */,
      72,    6,  543,    2, 0x0a /* Public */,
      74,    5,  556,    2, 0x0a /* Public */,
      75,    5,  567,    2, 0x0a /* Public */,

 // signals: parameters
    QMetaType::Void,
    QMetaType::Void, QMetaType::QString, QMetaType::QString,    4,    5,
    QMetaType::Void, QMetaType::QString,    4,
    QMetaType::Void, QMetaType::QString, QMetaType::QString,    8,    9,
    QMetaType::Void, QMetaType::Int, QMetaType::Int,   11,   12,
    QMetaType::Void, QMetaType::Int,   12,
    QMetaType::Void, QMetaType::QString,    4,
    QMetaType::Void, QMetaType::QString,    4,
    QMetaType::Void, QMetaType::QString,    4,
    QMetaType::Void,
    QMetaType::Void, QMetaType::QString,    4,

 // slots: parameters
    0x80000000 | 19, QMetaType::QString, QMetaType::LongLong, QMetaType::QString,    4,   20,   21,
    0x80000000 | 23, QMetaType::Int, QMetaType::Bool, QMetaType::QString,   12,   24,   21,
    0x80000000 | 23, QMetaType::QString, QMetaType::Bool,    4,   24,
    0x80000000 | 19,
    0x80000000 | 27, QMetaType::Int, QMetaType::QString, QMetaType::QString,   12,   28,   21,
    0x80000000 | 23, QMetaType::QString,    4,
    0x80000000 | 27, QMetaType::QString, QMetaType::QString,    4,    5,
    0x80000000 | 32, QMetaType::Int, QMetaType::QString, QMetaType::QString,   12,   28,   21,
    0x80000000 | 23, QMetaType::Int, QMetaType::QString, QMetaType::QString, QMetaType::QString,   12,   28,   34,   21,
    0x80000000 | 27, QMetaType::QString, QMetaType::QString,    4,   28,
    0x80000000 | 32, QMetaType::Int, QMetaType::QString,   12,   21,
    0x80000000 | 27, QMetaType::Int, QMetaType::QString, QMetaType::QString, QMetaType::QString,   12,   28,   34,   21,
    0x80000000 | 27, QMetaType::Int, QMetaType::QString, QMetaType::QString,   12,   28,   21,
    0x80000000 | 27,
    0x80000000 | 27, QMetaType::Int,   12,
    0x80000000 | 27, QMetaType::QString,    4,
    0x80000000 | 27, QMetaType::QString, QMetaType::QString, QMetaType::QString,    4,   28,   34,
    0x80000000 | 43,
    0x80000000 | 43,
    0x80000000 | 23, QMetaType::QString, QMetaType::LongLong, QMetaType::QString,    4,   20,   21,
    0x80000000 | 23, QMetaType::QString, QMetaType::LongLong, QMetaType::QString, QMetaType::Bool,    4,   20,   21,   47,
    0x80000000 | 23, QMetaType::QString, QMetaType::LongLong, QMetaType::QString,   49,   20,   21,
    0x80000000 | 23, QMetaType::QString, QMetaType::LongLong, QMetaType::QString, QMetaType::Bool,   49,   20,   21,   47,
    QMetaType::Void, QMetaType::QString, QMetaType::QByteArray, QMetaType::Int,    4,   53,   54,
    0x80000000 | 56, QMetaType::Int, QMetaType::QString, QMetaType::QString, QMetaType::QString,   12,   28,   34,   21,
    0x80000000 | 58, QMetaType::Int, QMetaType::QString, QMetaType::QString, QMetaType::QString,   12,   28,   34,   21,
    0x80000000 | 56, QMetaType::Int, QMetaType::QString, QMetaType::QString, QMetaType::QString,   12,   28,   34,   21,
    0x80000000 | 58, QMetaType::Int, QMetaType::QString, QMetaType::QString, QMetaType::QString,   12,   28,   34,   21,
    0x80000000 | 43, QMetaType::Int, QMetaType::QString, QMetaType::QString, QMetaType::QString,   12,   28,   34,   21,
    0x80000000 | 58, QMetaType::Int, QMetaType::QString, QMetaType::QString, QMetaType::QString,   12,   28,   34,   21,
    0x80000000 | 19,
    0x80000000 | 23, QMetaType::Int, QMetaType::QString, QMetaType::QString, QMetaType::QString,   12,   28,   34,   21,
    0x80000000 | 27, QMetaType::Int, QMetaType::QString, QMetaType::QString,   12,   28,   21,
    0x80000000 | 23, QMetaType::Int, QMetaType::QString, QMetaType::QString, QMetaType::QString, QMetaType::QString,   12,   28,   67,   68,   21,
    QMetaType::Void, QMetaType::Int, QMetaType::QString,   12,   21,
    0x80000000 | 32, QMetaType::QString,    4,
    0x80000000 | 32,
    0x80000000 | 23, QMetaType::Int, QMetaType::QString, QMetaType::QString, QMetaType::QByteArray, QMetaType::QString,   12,   28,   34,   73,   21,
    0x80000000 | 23, QMetaType::Int, QMetaType::QString, QMetaType::QString, QMetaType::QByteArray, QMetaType::Int, QMetaType::QString,   12,   28,   34,   73,   33,   21,
    0x80000000 | 23, QMetaType::Int, QMetaType::QString, QMetaType::QString, QMetaType::QByteArray, QMetaType::QString,   12,   28,   34,   73,   21,
    0x80000000 | 23, QMetaType::Int, QMetaType::QString, QMetaType::QString, QMetaType::QString, QMetaType::QString,   12,   28,   34,   73,   21,

       0        // eod
};

void OrgKdeKWalletInterface::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        auto *_t = static_cast<OrgKdeKWalletInterface *>(_o);
        Q_UNUSED(_t)
        switch (_id) {
        case 0: _t->allWalletsClosed(); break;
        case 1: _t->applicationDisconnected((*reinterpret_cast< const QString(*)>(_a[1])),(*reinterpret_cast< const QString(*)>(_a[2]))); break;
        case 2: _t->folderListUpdated((*reinterpret_cast< const QString(*)>(_a[1]))); break;
        case 3: _t->folderUpdated((*reinterpret_cast< const QString(*)>(_a[1])),(*reinterpret_cast< const QString(*)>(_a[2]))); break;
        case 4: _t->walletAsyncOpened((*reinterpret_cast< int(*)>(_a[1])),(*reinterpret_cast< int(*)>(_a[2]))); break;
        case 5: _t->walletClosed((*reinterpret_cast< int(*)>(_a[1]))); break;
        case 6: _t->walletClosed((*reinterpret_cast< const QString(*)>(_a[1]))); break;
        case 7: _t->walletCreated((*reinterpret_cast< const QString(*)>(_a[1]))); break;
        case 8: _t->walletDeleted((*reinterpret_cast< const QString(*)>(_a[1]))); break;
        case 9: _t->walletListDirty(); break;
        case 10: _t->walletOpened((*reinterpret_cast< const QString(*)>(_a[1]))); break;
        case 11: { QDBusPendingReply<> _r = _t->changePassword((*reinterpret_cast< const QString(*)>(_a[1])),(*reinterpret_cast< qlonglong(*)>(_a[2])),(*reinterpret_cast< const QString(*)>(_a[3])));
            if (_a[0]) *reinterpret_cast< QDBusPendingReply<>*>(_a[0]) = std::move(_r); }  break;
        case 12: { QDBusPendingReply<int> _r = _t->close((*reinterpret_cast< int(*)>(_a[1])),(*reinterpret_cast< bool(*)>(_a[2])),(*reinterpret_cast< const QString(*)>(_a[3])));
            if (_a[0]) *reinterpret_cast< QDBusPendingReply<int>*>(_a[0]) = std::move(_r); }  break;
        case 13: { QDBusPendingReply<int> _r = _t->close((*reinterpret_cast< const QString(*)>(_a[1])),(*reinterpret_cast< bool(*)>(_a[2])));
            if (_a[0]) *reinterpret_cast< QDBusPendingReply<int>*>(_a[0]) = std::move(_r); }  break;
        case 14: { QDBusPendingReply<> _r = _t->closeAllWallets();
            if (_a[0]) *reinterpret_cast< QDBusPendingReply<>*>(_a[0]) = std::move(_r); }  break;
        case 15: { QDBusPendingReply<bool> _r = _t->createFolder((*reinterpret_cast< int(*)>(_a[1])),(*reinterpret_cast< const QString(*)>(_a[2])),(*reinterpret_cast< const QString(*)>(_a[3])));
            if (_a[0]) *reinterpret_cast< QDBusPendingReply<bool>*>(_a[0]) = std::move(_r); }  break;
        case 16: { QDBusPendingReply<int> _r = _t->deleteWallet((*reinterpret_cast< const QString(*)>(_a[1])));
            if (_a[0]) *reinterpret_cast< QDBusPendingReply<int>*>(_a[0]) = std::move(_r); }  break;
        case 17: { QDBusPendingReply<bool> _r = _t->disconnectApplication((*reinterpret_cast< const QString(*)>(_a[1])),(*reinterpret_cast< const QString(*)>(_a[2])));
            if (_a[0]) *reinterpret_cast< QDBusPendingReply<bool>*>(_a[0]) = std::move(_r); }  break;
        case 18: { QDBusPendingReply<QStringList> _r = _t->entryList((*reinterpret_cast< int(*)>(_a[1])),(*reinterpret_cast< const QString(*)>(_a[2])),(*reinterpret_cast< const QString(*)>(_a[3])));
            if (_a[0]) *reinterpret_cast< QDBusPendingReply<QStringList>*>(_a[0]) = std::move(_r); }  break;
        case 19: { QDBusPendingReply<int> _r = _t->entryType((*reinterpret_cast< int(*)>(_a[1])),(*reinterpret_cast< const QString(*)>(_a[2])),(*reinterpret_cast< const QString(*)>(_a[3])),(*reinterpret_cast< const QString(*)>(_a[4])));
            if (_a[0]) *reinterpret_cast< QDBusPendingReply<int>*>(_a[0]) = std::move(_r); }  break;
        case 20: { QDBusPendingReply<bool> _r = _t->folderDoesNotExist((*reinterpret_cast< const QString(*)>(_a[1])),(*reinterpret_cast< const QString(*)>(_a[2])));
            if (_a[0]) *reinterpret_cast< QDBusPendingReply<bool>*>(_a[0]) = std::move(_r); }  break;
        case 21: { QDBusPendingReply<QStringList> _r = _t->folderList((*reinterpret_cast< int(*)>(_a[1])),(*reinterpret_cast< const QString(*)>(_a[2])));
            if (_a[0]) *reinterpret_cast< QDBusPendingReply<QStringList>*>(_a[0]) = std::move(_r); }  break;
        case 22: { QDBusPendingReply<bool> _r = _t->hasEntry((*reinterpret_cast< int(*)>(_a[1])),(*reinterpret_cast< const QString(*)>(_a[2])),(*reinterpret_cast< const QString(*)>(_a[3])),(*reinterpret_cast< const QString(*)>(_a[4])));
            if (_a[0]) *reinterpret_cast< QDBusPendingReply<bool>*>(_a[0]) = std::move(_r); }  break;
        case 23: { QDBusPendingReply<bool> _r = _t->hasFolder((*reinterpret_cast< int(*)>(_a[1])),(*reinterpret_cast< const QString(*)>(_a[2])),(*reinterpret_cast< const QString(*)>(_a[3])));
            if (_a[0]) *reinterpret_cast< QDBusPendingReply<bool>*>(_a[0]) = std::move(_r); }  break;
        case 24: { QDBusPendingReply<bool> _r = _t->isEnabled();
            if (_a[0]) *reinterpret_cast< QDBusPendingReply<bool>*>(_a[0]) = std::move(_r); }  break;
        case 25: { QDBusPendingReply<bool> _r = _t->isOpen((*reinterpret_cast< int(*)>(_a[1])));
            if (_a[0]) *reinterpret_cast< QDBusPendingReply<bool>*>(_a[0]) = std::move(_r); }  break;
        case 26: { QDBusPendingReply<bool> _r = _t->isOpen((*reinterpret_cast< const QString(*)>(_a[1])));
            if (_a[0]) *reinterpret_cast< QDBusPendingReply<bool>*>(_a[0]) = std::move(_r); }  break;
        case 27: { QDBusPendingReply<bool> _r = _t->keyDoesNotExist((*reinterpret_cast< const QString(*)>(_a[1])),(*reinterpret_cast< const QString(*)>(_a[2])),(*reinterpret_cast< const QString(*)>(_a[3])));
            if (_a[0]) *reinterpret_cast< QDBusPendingReply<bool>*>(_a[0]) = std::move(_r); }  break;
        case 28: { QDBusPendingReply<QString> _r = _t->localWallet();
            if (_a[0]) *reinterpret_cast< QDBusPendingReply<QString>*>(_a[0]) = std::move(_r); }  break;
        case 29: { QDBusPendingReply<QString> _r = _t->networkWallet();
            if (_a[0]) *reinterpret_cast< QDBusPendingReply<QString>*>(_a[0]) = std::move(_r); }  break;
        case 30: { QDBusPendingReply<int> _r = _t->open((*reinterpret_cast< const QString(*)>(_a[1])),(*reinterpret_cast< qlonglong(*)>(_a[2])),(*reinterpret_cast< const QString(*)>(_a[3])));
            if (_a[0]) *reinterpret_cast< QDBusPendingReply<int>*>(_a[0]) = std::move(_r); }  break;
        case 31: { QDBusPendingReply<int> _r = _t->openAsync((*reinterpret_cast< const QString(*)>(_a[1])),(*reinterpret_cast< qlonglong(*)>(_a[2])),(*reinterpret_cast< const QString(*)>(_a[3])),(*reinterpret_cast< bool(*)>(_a[4])));
            if (_a[0]) *reinterpret_cast< QDBusPendingReply<int>*>(_a[0]) = std::move(_r); }  break;
        case 32: { QDBusPendingReply<int> _r = _t->openPath((*reinterpret_cast< const QString(*)>(_a[1])),(*reinterpret_cast< qlonglong(*)>(_a[2])),(*reinterpret_cast< const QString(*)>(_a[3])));
            if (_a[0]) *reinterpret_cast< QDBusPendingReply<int>*>(_a[0]) = std::move(_r); }  break;
        case 33: { QDBusPendingReply<int> _r = _t->openPathAsync((*reinterpret_cast< const QString(*)>(_a[1])),(*reinterpret_cast< qlonglong(*)>(_a[2])),(*reinterpret_cast< const QString(*)>(_a[3])),(*reinterpret_cast< bool(*)>(_a[4])));
            if (_a[0]) *reinterpret_cast< QDBusPendingReply<int>*>(_a[0]) = std::move(_r); }  break;
        case 34: _t->pamOpen((*reinterpret_cast< const QString(*)>(_a[1])),(*reinterpret_cast< const QByteArray(*)>(_a[2])),(*reinterpret_cast< int(*)>(_a[3]))); break;
        case 35: { QDBusPendingReply<QByteArray> _r = _t->readEntry((*reinterpret_cast< int(*)>(_a[1])),(*reinterpret_cast< const QString(*)>(_a[2])),(*reinterpret_cast< const QString(*)>(_a[3])),(*reinterpret_cast< const QString(*)>(_a[4])));
            if (_a[0]) *reinterpret_cast< QDBusPendingReply<QByteArray>*>(_a[0]) = std::move(_r); }  break;
        case 36: { QDBusPendingReply<QVariantMap> _r = _t->readEntryList((*reinterpret_cast< int(*)>(_a[1])),(*reinterpret_cast< const QString(*)>(_a[2])),(*reinterpret_cast< const QString(*)>(_a[3])),(*reinterpret_cast< const QString(*)>(_a[4])));
            if (_a[0]) *reinterpret_cast< QDBusPendingReply<QVariantMap>*>(_a[0]) = std::move(_r); }  break;
        case 37: { QDBusPendingReply<QByteArray> _r = _t->readMap((*reinterpret_cast< int(*)>(_a[1])),(*reinterpret_cast< const QString(*)>(_a[2])),(*reinterpret_cast< const QString(*)>(_a[3])),(*reinterpret_cast< const QString(*)>(_a[4])));
            if (_a[0]) *reinterpret_cast< QDBusPendingReply<QByteArray>*>(_a[0]) = std::move(_r); }  break;
        case 38: { QDBusPendingReply<QVariantMap> _r = _t->readMapList((*reinterpret_cast< int(*)>(_a[1])),(*reinterpret_cast< const QString(*)>(_a[2])),(*reinterpret_cast< const QString(*)>(_a[3])),(*reinterpret_cast< const QString(*)>(_a[4])));
            if (_a[0]) *reinterpret_cast< QDBusPendingReply<QVariantMap>*>(_a[0]) = std::move(_r); }  break;
        case 39: { QDBusPendingReply<QString> _r = _t->readPassword((*reinterpret_cast< int(*)>(_a[1])),(*reinterpret_cast< const QString(*)>(_a[2])),(*reinterpret_cast< const QString(*)>(_a[3])),(*reinterpret_cast< const QString(*)>(_a[4])));
            if (_a[0]) *reinterpret_cast< QDBusPendingReply<QString>*>(_a[0]) = std::move(_r); }  break;
        case 40: { QDBusPendingReply<QVariantMap> _r = _t->readPasswordList((*reinterpret_cast< int(*)>(_a[1])),(*reinterpret_cast< const QString(*)>(_a[2])),(*reinterpret_cast< const QString(*)>(_a[3])),(*reinterpret_cast< const QString(*)>(_a[4])));
            if (_a[0]) *reinterpret_cast< QDBusPendingReply<QVariantMap>*>(_a[0]) = std::move(_r); }  break;
        case 41: { QDBusPendingReply<> _r = _t->reconfigure();
            if (_a[0]) *reinterpret_cast< QDBusPendingReply<>*>(_a[0]) = std::move(_r); }  break;
        case 42: { QDBusPendingReply<int> _r = _t->removeEntry((*reinterpret_cast< int(*)>(_a[1])),(*reinterpret_cast< const QString(*)>(_a[2])),(*reinterpret_cast< const QString(*)>(_a[3])),(*reinterpret_cast< const QString(*)>(_a[4])));
            if (_a[0]) *reinterpret_cast< QDBusPendingReply<int>*>(_a[0]) = std::move(_r); }  break;
        case 43: { QDBusPendingReply<bool> _r = _t->removeFolder((*reinterpret_cast< int(*)>(_a[1])),(*reinterpret_cast< const QString(*)>(_a[2])),(*reinterpret_cast< const QString(*)>(_a[3])));
            if (_a[0]) *reinterpret_cast< QDBusPendingReply<bool>*>(_a[0]) = std::move(_r); }  break;
        case 44: { QDBusPendingReply<int> _r = _t->renameEntry((*reinterpret_cast< int(*)>(_a[1])),(*reinterpret_cast< const QString(*)>(_a[2])),(*reinterpret_cast< const QString(*)>(_a[3])),(*reinterpret_cast< const QString(*)>(_a[4])),(*reinterpret_cast< const QString(*)>(_a[5])));
            if (_a[0]) *reinterpret_cast< QDBusPendingReply<int>*>(_a[0]) = std::move(_r); }  break;
        case 45: _t->sync((*reinterpret_cast< int(*)>(_a[1])),(*reinterpret_cast< const QString(*)>(_a[2]))); break;
        case 46: { QDBusPendingReply<QStringList> _r = _t->users((*reinterpret_cast< const QString(*)>(_a[1])));
            if (_a[0]) *reinterpret_cast< QDBusPendingReply<QStringList>*>(_a[0]) = std::move(_r); }  break;
        case 47: { QDBusPendingReply<QStringList> _r = _t->wallets();
            if (_a[0]) *reinterpret_cast< QDBusPendingReply<QStringList>*>(_a[0]) = std::move(_r); }  break;
        case 48: { QDBusPendingReply<int> _r = _t->writeEntry((*reinterpret_cast< int(*)>(_a[1])),(*reinterpret_cast< const QString(*)>(_a[2])),(*reinterpret_cast< const QString(*)>(_a[3])),(*reinterpret_cast< const QByteArray(*)>(_a[4])),(*reinterpret_cast< const QString(*)>(_a[5])));
            if (_a[0]) *reinterpret_cast< QDBusPendingReply<int>*>(_a[0]) = std::move(_r); }  break;
        case 49: { QDBusPendingReply<int> _r = _t->writeEntry((*reinterpret_cast< int(*)>(_a[1])),(*reinterpret_cast< const QString(*)>(_a[2])),(*reinterpret_cast< const QString(*)>(_a[3])),(*reinterpret_cast< const QByteArray(*)>(_a[4])),(*reinterpret_cast< int(*)>(_a[5])),(*reinterpret_cast< const QString(*)>(_a[6])));
            if (_a[0]) *reinterpret_cast< QDBusPendingReply<int>*>(_a[0]) = std::move(_r); }  break;
        case 50: { QDBusPendingReply<int> _r = _t->writeMap((*reinterpret_cast< int(*)>(_a[1])),(*reinterpret_cast< const QString(*)>(_a[2])),(*reinterpret_cast< const QString(*)>(_a[3])),(*reinterpret_cast< const QByteArray(*)>(_a[4])),(*reinterpret_cast< const QString(*)>(_a[5])));
            if (_a[0]) *reinterpret_cast< QDBusPendingReply<int>*>(_a[0]) = std::move(_r); }  break;
        case 51: { QDBusPendingReply<int> _r = _t->writePassword((*reinterpret_cast< int(*)>(_a[1])),(*reinterpret_cast< const QString(*)>(_a[2])),(*reinterpret_cast< const QString(*)>(_a[3])),(*reinterpret_cast< const QString(*)>(_a[4])),(*reinterpret_cast< const QString(*)>(_a[5])));
            if (_a[0]) *reinterpret_cast< QDBusPendingReply<int>*>(_a[0]) = std::move(_r); }  break;
        default: ;
        }
    } else if (_c == QMetaObject::IndexOfMethod) {
        int *result = reinterpret_cast<int *>(_a[0]);
        {
            using _t = void (OrgKdeKWalletInterface::*)();
            if (*reinterpret_cast<_t *>(_a[1]) == static_cast<_t>(&OrgKdeKWalletInterface::allWalletsClosed)) {
                *result = 0;
                return;
            }
        }
        {
            using _t = void (OrgKdeKWalletInterface::*)(const QString & , const QString & );
            if (*reinterpret_cast<_t *>(_a[1]) == static_cast<_t>(&OrgKdeKWalletInterface::applicationDisconnected)) {
                *result = 1;
                return;
            }
        }
        {
            using _t = void (OrgKdeKWalletInterface::*)(const QString & );
            if (*reinterpret_cast<_t *>(_a[1]) == static_cast<_t>(&OrgKdeKWalletInterface::folderListUpdated)) {
                *result = 2;
                return;
            }
        }
        {
            using _t = void (OrgKdeKWalletInterface::*)(const QString & , const QString & );
            if (*reinterpret_cast<_t *>(_a[1]) == static_cast<_t>(&OrgKdeKWalletInterface::folderUpdated)) {
                *result = 3;
                return;
            }
        }
        {
            using _t = void (OrgKdeKWalletInterface::*)(int , int );
            if (*reinterpret_cast<_t *>(_a[1]) == static_cast<_t>(&OrgKdeKWalletInterface::walletAsyncOpened)) {
                *result = 4;
                return;
            }
        }
        {
            using _t = void (OrgKdeKWalletInterface::*)(int );
            if (*reinterpret_cast<_t *>(_a[1]) == static_cast<_t>(&OrgKdeKWalletInterface::walletClosed)) {
                *result = 5;
                return;
            }
        }
        {
            using _t = void (OrgKdeKWalletInterface::*)(const QString & );
            if (*reinterpret_cast<_t *>(_a[1]) == static_cast<_t>(&OrgKdeKWalletInterface::walletClosed)) {
                *result = 6;
                return;
            }
        }
        {
            using _t = void (OrgKdeKWalletInterface::*)(const QString & );
            if (*reinterpret_cast<_t *>(_a[1]) == static_cast<_t>(&OrgKdeKWalletInterface::walletCreated)) {
                *result = 7;
                return;
            }
        }
        {
            using _t = void (OrgKdeKWalletInterface::*)(const QString & );
            if (*reinterpret_cast<_t *>(_a[1]) == static_cast<_t>(&OrgKdeKWalletInterface::walletDeleted)) {
                *result = 8;
                return;
            }
        }
        {
            using _t = void (OrgKdeKWalletInterface::*)();
            if (*reinterpret_cast<_t *>(_a[1]) == static_cast<_t>(&OrgKdeKWalletInterface::walletListDirty)) {
                *result = 9;
                return;
            }
        }
        {
            using _t = void (OrgKdeKWalletInterface::*)(const QString & );
            if (*reinterpret_cast<_t *>(_a[1]) == static_cast<_t>(&OrgKdeKWalletInterface::walletOpened)) {
                *result = 10;
                return;
            }
        }
    }
}

QT_INIT_METAOBJECT const QMetaObject OrgKdeKWalletInterface::staticMetaObject = { {
    QMetaObject::SuperData::link<QDBusAbstractInterface::staticMetaObject>(),
    qt_meta_stringdata_OrgKdeKWalletInterface.data,
    qt_meta_data_OrgKdeKWalletInterface,
    qt_static_metacall,
    nullptr,
    nullptr
} };


const QMetaObject *OrgKdeKWalletInterface::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *OrgKdeKWalletInterface::qt_metacast(const char *_clname)
{
    if (!_clname) return nullptr;
    if (!strcmp(_clname, qt_meta_stringdata_OrgKdeKWalletInterface.stringdata0))
        return static_cast<void*>(this);
    return QDBusAbstractInterface::qt_metacast(_clname);
}

int OrgKdeKWalletInterface::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QDBusAbstractInterface::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 52)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 52;
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        if (_id < 52)
            *reinterpret_cast<int*>(_a[0]) = -1;
        _id -= 52;
    }
    return _id;
}

// SIGNAL 0
void OrgKdeKWalletInterface::allWalletsClosed()
{
    QMetaObject::activate(this, &staticMetaObject, 0, nullptr);
}

// SIGNAL 1
void OrgKdeKWalletInterface::applicationDisconnected(const QString & _t1, const QString & _t2)
{
    void *_a[] = { nullptr, const_cast<void*>(reinterpret_cast<const void*>(std::addressof(_t1))), const_cast<void*>(reinterpret_cast<const void*>(std::addressof(_t2))) };
    QMetaObject::activate(this, &staticMetaObject, 1, _a);
}

// SIGNAL 2
void OrgKdeKWalletInterface::folderListUpdated(const QString & _t1)
{
    void *_a[] = { nullptr, const_cast<void*>(reinterpret_cast<const void*>(std::addressof(_t1))) };
    QMetaObject::activate(this, &staticMetaObject, 2, _a);
}

// SIGNAL 3
void OrgKdeKWalletInterface::folderUpdated(const QString & _t1, const QString & _t2)
{
    void *_a[] = { nullptr, const_cast<void*>(reinterpret_cast<const void*>(std::addressof(_t1))), const_cast<void*>(reinterpret_cast<const void*>(std::addressof(_t2))) };
    QMetaObject::activate(this, &staticMetaObject, 3, _a);
}

// SIGNAL 4
void OrgKdeKWalletInterface::walletAsyncOpened(int _t1, int _t2)
{
    void *_a[] = { nullptr, const_cast<void*>(reinterpret_cast<const void*>(std::addressof(_t1))), const_cast<void*>(reinterpret_cast<const void*>(std::addressof(_t2))) };
    QMetaObject::activate(this, &staticMetaObject, 4, _a);
}

// SIGNAL 5
void OrgKdeKWalletInterface::walletClosed(int _t1)
{
    void *_a[] = { nullptr, const_cast<void*>(reinterpret_cast<const void*>(std::addressof(_t1))) };
    QMetaObject::activate(this, &staticMetaObject, 5, _a);
}

// SIGNAL 6
void OrgKdeKWalletInterface::walletClosed(const QString & _t1)
{
    void *_a[] = { nullptr, const_cast<void*>(reinterpret_cast<const void*>(std::addressof(_t1))) };
    QMetaObject::activate(this, &staticMetaObject, 6, _a);
}

// SIGNAL 7
void OrgKdeKWalletInterface::walletCreated(const QString & _t1)
{
    void *_a[] = { nullptr, const_cast<void*>(reinterpret_cast<const void*>(std::addressof(_t1))) };
    QMetaObject::activate(this, &staticMetaObject, 7, _a);
}

// SIGNAL 8
void OrgKdeKWalletInterface::walletDeleted(const QString & _t1)
{
    void *_a[] = { nullptr, const_cast<void*>(reinterpret_cast<const void*>(std::addressof(_t1))) };
    QMetaObject::activate(this, &staticMetaObject, 8, _a);
}

// SIGNAL 9
void OrgKdeKWalletInterface::walletListDirty()
{
    QMetaObject::activate(this, &staticMetaObject, 9, nullptr);
}

// SIGNAL 10
void OrgKdeKWalletInterface::walletOpened(const QString & _t1)
{
    void *_a[] = { nullptr, const_cast<void*>(reinterpret_cast<const void*>(std::addressof(_t1))) };
    QMetaObject::activate(this, &staticMetaObject, 10, _a);
}
QT_WARNING_POP
QT_END_MOC_NAMESPACE
